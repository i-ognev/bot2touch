from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.types import ReplyKeyboardRemove, CallbackQuery

from keyboards.default.contact_buttons import keyboard_contacts
from keyboards.inline.meet_buttons import keyboard_meet
from keyboards.inline.meet_coffee_buttons import keyboard_coffee
from loader import dp
from states.name_coffee import NameCoffee


@dp.message_handler(Text(endswith="—Å—Ç—Ä–µ—á—É"))
async def get_meet(message: types.Message):
    call_meet = message.text
    print(f"–ö–∞–∫–æ–π –Ω–∞–ø–∏—Ç–æ–∫?:{call_meet}")
    await message.answer("üëç –î–∞–≤–∞–π—Ç–µ —Ç–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –Ω–∞–ø–∏—Ç–∫–∞–º–∏",
                         reply_markup=ReplyKeyboardRemove())
    await message.answer("–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ ‚òï –ö–æ—Ñ–µ –∏–ª–∏ üçª –ø–æ –ü–∏–≤—É‚ùì",
                         reply_markup=keyboard_meet)


# @dp.callback_query_handler(text_contains="–∫–æ—Ñ–µ–π–Ω—è")
# async def get_meet2(call: CallbackQuery):
#    await call.answer(cache_time=60)
#    call_meet2 = call.data
#    print(f"–ß—Ç–æ –ø–∏—Ç—å?:{call_meet2}")
#    await call.message.answer("üëç –î–∞–≤–∞–π—Ç–µ —Ç–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –Ω–∞–ø–∏—Ç–∫–∞–º–∏", )
#    await call.message.answer("–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ ‚òï –ö–æ—Ñ–µ –∏–ª–∏ üçª –ø–æ –ü–∏–≤—É‚ùì",
#                              reply_markup=keyboard_meet)
#    await call.message.edit_reply_markup()


@dp.callback_query_handler(text_endswith="–Ω—è")
async def get_meet3(call: CallbackQuery):
    await call.answer(cache_time=60)
    call_meet3 = call.data
    print(f"–ì–¥–µ –≤—Å—Ç—Ä–µ—á–∞?:{call_meet3}")
    await call.message.answer("üëç –î–∞–≤–∞–π—Ç–µ —Ç–µ–ø–µ—Ä—å –æ–ø—Ä–µ–¥–µ–ª–∏–º—Å—è —Å –∫–æ—Ñ–µ–π–Ω–µ–π")
    await call.message.answer("–ö–∞–∫—É—é –∫–æ—Ñ–µ–π–Ω—é –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ‚ùì",
                              reply_markup=keyboard_coffee)
    await call.message.edit_reply_markup()


@dp.callback_query_handler(text_endswith="–∞–Ω—Ç")
async def get_meet2(call: CallbackQuery):
    await call.answer(cache_time=60)
    call_meet4 = call.data
    print(f"–ì–¥–µ –≤—Å—Ç—Ä–µ—á–∞?:{call_meet4}")
    await call.message.answer("‚òïÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ñ–µ–π–Ω–∏ ‚§µ")
    await NameCoffee.next()


@dp.message_handler(state=NameCoffee.Cof)
async def get_meet3(message: types.Message, state: FSMContext):
    coffee = message.text
    print(f"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ñ–µ–π–Ω—é:{coffee}")
    await message.answer(f"–í–∞—à –≤—ã–±–æ—Ä: {coffee}!")
    await state.finish()
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π üìû –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞,"
                         " —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –≤–∞–º –∏ –Ω–∞–∑–Ω–∞—á–∏—Ç—å –≤—Å—Ç—Ä–µ—á—É ‚§µ",
                         reply_markup=keyboard_contacts)



